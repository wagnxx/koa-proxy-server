{"version":3,"sources":["webpack:///./src/common/validator/common.js","webpack:///./src/common/utils/file-utils.js","webpack:///./src/views/task-center/page/task-history/index.vue?ee50","webpack:///./src/views/task-center/api/api-task-center.js","webpack:///./src/views/task-center/validator/index.js","webpack:///./src/views/task-center/component/portal-dialog/index.vue","webpack:///src/views/task-center/component/portal-dialog/index.vue","webpack:///./src/views/task-center/component/portal-dialog/index.vue?0ad9","webpack:///./src/views/task-center/component/portal-dialog/index.vue?66fc","webpack:///./src/views/task-center/component/portal-dialog/index.vue?b707","webpack:///./src/views/task-center/page/task-history/index.vue","webpack:///src/views/task-center/page/task-history/index.vue","webpack:///./src/views/task-center/page/task-history/index.vue?6b87","webpack:///./src/views/task-center/page/task-history/index.vue?b74d"],"names":["inputRequiredValidateObj","required","message","trigger","checkRequiredValidateObj","selectRequiredValidateObj","numberAndCharacterValidateObj","pattern","integerValidateObj","msisdnValidateObj","nonSpecialCharValidateObj","nonSpecialCharExceptPercentSignValidateObj","nonSpecialValidateObj","getStrLenValidateObj","minLen","maxLen","len0To18StrValidateObj","len6To16StrValidateObj","len4To12StrValidateObj","len6To12StrValidateObj","len19StrValidateObj","len24StrValidateObj","len64StrValidateObj","len256StrValidateObj","len512StrValidateObj","len1To18StrValidateObj","len0To32StrValidateObj","len0To30StrValidateObj","len9To18StrValidateObj","msg","min","max","len4to0trValidateObj","checkFuzzySearchInput","obj","arr","item","toString","startsWith","length","push","every","checkLengthExceptPercentSign","errorMsg","validator","rule","value","callback","Error","downLoadFile","url","data","method","hasXXSRFTOKEN","xhr","XMLHttpRequest","open","setRequestHeader","cookie","get","responseType","onload","this","status","blob","response","temp","getResponseHeader","split","fileName","decodeURIComponent","zipUrl","URL","createObjectURL","link","document","createElement","href","download","click","MessageBox","alert","type","confirmButtonText","send","JSON","stringify","queryMyToDoTask","request","queryGroupTask","queryTaskName","queryWorkFlowName","queryCurrentHandler","queryOrgCurrentHandler","queryRole","batchProcess","queryActiveTask","queryHistoryTask","queryMyInitiatedTask","queryWorkFlowDataDict","queryTaskDetail","searchTransactionByOrderId","queryDetail","queryOrgOperatorDetail","receiverId","changeStatus","queryBulkSpecificInfo","buildUrlWithObj","queryValidRecords","params","kycDetails","queryLanguageList","queryBackToInitiator","queryBackKycToInitiator","querySubscribeProductsForWorkFlow","nonSpecialCharValidate","dateValidate","val","sTime","startTime","Date","getTime","eTime","endTime","result","taskHistoryRules","userName","firstName","middleName","lastName","taskNo","taskName","currentHandler","workflowId","workflowName","remark","shortCode","dateValidateRule","creationTime","groupTaskRulus","operation","render","_vm","_c","_self","staticClass","class","isOverflowHeight","attrs","title","visible","width","closeOnClickModal","handleClose","on","$event","openedDialog","closedDialog","_t","staticStyle","dialogSearchFormVisibility","ref","needSearchFormBottomLine","searchForm","formConfigList","formData","formRules","needSearchOperateBtn","searchLoading","smallAutoColumn","bigAutoColumn","enterEvent","reset","search","_e","dialogTableVisibility","dialogTable","isCheck","tableIsSearch","columns","hasPagination","paginationConfig","getTableData","idKey","isSingleCheck","onSelectionChange","singleChange","configFormBottomLine","dialogConfigFormVisibility","configForm","configFormRules","needOperateBtn","configSmall","configBig","slot","preventDefault","handleCancelClick","apply","arguments","_v","_s","cancelText","directives","name","rawName","handleConfirmClick","confirmText","staticRenderFns","components","PortalForm","TablePage","props","default","dialogVisible","validate","computed","watch","handler","immediate","methods","component","projectObj","desc","resetSearch","$t","handleCommand","model","sortTime","$$v","expression","_l","sortData","key","label","isSearch","scopedSlots","_u","fn","scope","detailBtnIsShow","row","hasPerm","handleDetail","undefined","style","statusStyle","taskNameDialogVisible","taskNameSearchForm","taskNameSearchLoading","closeDialog","selectTaskDialogReset","comfirmTaskNameHandler","selectOperatorDialogVisible","selectOperatorSearchForm","selectOperatorDialogTable","selectOperatorSearchLoading","selectOperatorCloseDialog","selectOperatorDialogReset","comfirmselectOperator","PortalDialog","priority","taskType","dueTime","tempTaskName","curSelectTaskNameToTaskType","tempCurrentHandler","searchFormPriority","searchFormTaskType","searchFormStatus","prop","align","__slotName","fixed","total","pageIndex","pageSize","taskNameSearchFormData","selectOperatorSearchFormData","operatorType","pickerOptions","onPick","maxDate","minDate","disabledDate","selectOperatorId","newSearchType","selectRoleFormConfigList","comp","bind","clearable","placeholder","option","selectRoleSearchFormData","roleName","roleCategory","tempOptConfigData","tempOptFormData","tempOptTableCol","assignRoleFormConfigList","assignRoleSearchFormData","tempConfig","options","formItemClass","slots","icon","underline","event","sameGroup","format","isShow","created","dayjs","deep","dictCodes","resConverseList","receiveObj","category","description","workflowType","taskId","initiator","processResult","viewFlag","formURL","processFlag","tskType","ownerId","createTimeFrom","createTimeTo","sortingMode","pageNo","taskVO","res","header","list","getHandlerData","operatorName","selectType","totalRecords","toLocaleLowerCase","map","selectTaskName","taskTypeCodetoLabel","taskTypeCondition","taskNameCondition","slice","success","selectOperator","path","query","Object","assignEvent"],"mappings":"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CAoC,sBACAC,aACAvH,eAEA,CACAkF,qCACAoC,gBACAC,aACAvH,eAEA,CACAkF,mDACAoC,iBACAC,aACAvH,cACAwH,uBACAC,gBAGA3F,kBACA4F,QACAC,YACAC,aAEA/F,iBACAsD,YACAY,yBACA8B,wBACAjJ,YACAkI,aAEArF,aACAG,SACA,CACAsD,qCACAoC,gBACAC,cAEA,CACArC,qCACAoC,gBACAC,eAGApC,YACAlD,iBACAJ,iBACAC,kBACA4F,QACAC,YACAC,YAEA7F,wCACAI,kCAEA8D,yBACAI,+BACAyB,8BACAvJ,YACAC,aACAC,cACAC,YACAqJ,gBACA9I,cAEA8B,2BACAiH,eACAC,SAAAC,UAAAC,cACA,4BACA,IACA,qBAGAC,iBACA,yBACA,eACA,oBACA,oBACA,uCAIA7B,2BACA3E,SACA,CACAsD,qCACAoC,gBACAC,cAEA,CACArC,sCACAoC,iBACAC,cAEA,CACArC,uCACAoC,kBACAC,cAEA,CACArC,qCACAoC,gBACAC,eAGApC,YACAlD,iBACAJ,iBACAC,kBACA4F,QACAC,YACAC,YAEA7F,iCACAI,kCAEAkG,oBACAC,iBACA9B,+BACA+B,0BACA,CACArD,qCACAD,eACAqC,gBACAkB,gBACAC,MACAC,aACAC,kDAGA,CACAzD,yCACAD,mBACAqC,oBACAkB,iBACAI,QACA,CACArP,YACA2L,cAGAuD,MACAE,mDAIAE,0BACAC,YACAC,iBAEAC,qBACAC,mBACAC,mBACAC,0BACA,CACAjE,qCACAD,eACAqC,gBACAkB,gBACAC,MACAC,aACAC,kDAGA,CACAzD,yCACAD,mBACAqC,oBACAkB,iBACAI,QACA,CACArP,YACA2L,cAGAuD,MACAE,mDAIAS,0BACAN,YACAC,iBAEAM,YACAnE,oDACAD,gBACAqC,iBACAkB,gBACAC,MACAC,aACAC,oDAKA3E,UACAnD,iBACA,OACA,CACAqE,mCACAD,aACAqC,cACAkB,gBACAC,MACAC,aACAC,kDAGA,CACAzD,qCACAD,eACAqC,gBACAkB,iBACAc,gCACAb,MACAE,kDAGA,CACAY,+BACArE,qCACAD,eACAqC,gBACAkB,gBACAC,MACAC,aACAC,kDAEAa,OACA,CACAhB,eACApF,cACAzD,wBACA8I,MACAgB,oBACAC,cAEAC,OACAnO,WACA,8BACA,2EACA,kCAMA,CACA0J,qCACAD,eACAqC,gBACAkB,iBACAc,gCACAb,MACAE,mDAGA,CACAY,+BACArE,mDACAD,qBACAqC,sBACAkB,gBACAC,MACAC,aACAC,kDAEAa,OACA,CACAhB,eACApF,cACAzD,wBACA8I,MACAgB,oBACAC,cAEAC,OACAnO,WACA,oCACA,sEAMA,CACA0J,mCACAD,aACAqC,cACAkB,iBACAc,8BACAb,MACAE,kDAGA,CACAzD,yCACAqE,sCACAK,aACAtC,oBACAkB,MACA,CACAvD,mBACAuD,sBACAC,MACAE,gDACApB,cACA5L,qBACAkO,6BACA,oCACA,sBACA,qCACA,uCACA,oCACA,oCAGA,CACArB,SACA7I,kCAIA,CACA4J,yBACArE,mDACAoC,eACArC,cACAuD,sBACAC,MACA9M,gBACAkO,6BACA,qCACAlB,qDAKA3C,qBACA,OACAnF,gBACA,CACA0I,yBACArE,qCACAD,eACAqC,gBACAkB,gBACAC,MACAC,aACAC,kDAGA,CACAzD,qCACAD,eACAqC,gBACAkB,iBACAc,gCACAb,MACAE,oDAIA7H,uCAGAwF,2BACA,OACAzF,gBACA,CACAqE,yCACAD,mBACAqC,oBACAkB,iBACAc,SACA,CACA/P,oBACA2L,+BAEA,CACA3L,mBACA2L,sBAGAuD,MACAE,mDAGA,CACAzD,qCACAD,eACAqC,gBACAkB,gBACAC,MACAC,aACAC,kDAGA,CACAzD,sCACAD,gBACAqC,iBACAkB,gBACAC,MACAC,aACAC,kDAGA,CACAzD,uCACAD,iBACAqC,kBACAkB,gBACAe,eACAO,WAEArB,MACAC,aACAC,kDAGA,CACAzD,qCACAD,eACAqC,gBACAkB,gBACAC,MACAC,aACAC,mDAIA7H,8CAIAiJ,UACA,4BACAC,IACA,oFACA,8BACAA,+FAEA,0BAEA/F,OACA6D,8BACA5D,WACA,+BACA,0DACA,sBACA,0EAGA,0DACA,sBACA,0DAGA,kBACA,sFAGA+F,SAEA3B,iBAEA,4CADA,EACA,uBAEA,qBAGAxH,UACAoD,WACA,gDACA,4BAEA+F,UAGA7F,SACA0B,eACA,iBACA,eACA,yEACA,gBACA,wEACA,cACA,wEACA,gBACA,2EACA,QACA,QAGAxE,SACA,sCACA,IACA,sBACA,qBAIAkE,mBACA,mBAEA,0BACA,4BACA0E,WACA,sCACA,gBACA,oCACA,iCAGA,6BACA,gFACA,0CACA,iCAAAhF,YAAA3L,WAEA,0DACA,4EACA,wCACA,+BAAA2L,YAAA3L,WAEA,sEACA,qCACAV,2BAEA,qCACAA,4BAEA,IAEA,qCAGA2L,cACA,uCACA,2BACA,yBACA,kBAEA2F,qBACAC,iBACA,SAEAvD,EADA,uBACAA,OACA,uBACAA,SAEAA,MAEA,SACA,iCACA,wBAEA,OADAwD,WACA,IAGA,8BACA,kBACA,kCACA,6BACA,kBACA,kCACA,OACAvL,oBACAwL,uBACAvL,yBACAwL,wBACApL,eACA4H,UACAvM,mBACAsM,WACA0D,gBACAC,0BACAC,4BACA7D,WACAhI,2BACA8L,oBACAC,kBACAC,8BAIA,qBACA,SACA,gCACA,iCACA,oCAEA,OADAC,WACA,IAIAA,yBAEA,OACAN,4BACA5L,gCACAyL,WACAxD,gCACAE,8BACAvM,4BACAuQ,8BACAC,6CACAC,2CACAC,gDACAC,uCACAvD,yCAEA,wBAAAwD,WAGA,GAFA,iBACA,sBACA,2BACA,+BACA,sBACAC,uBACA,wCACA,yBACA,sCACA,IAEA,sCACA,IAGA,CACAC,gBACAC,SAIA,kBAGAC,iBACA,uBACA,OACAzD,gBACAvN,YACA+D,oDACAC,sDACAC,wDACAC,oDACAyM,iEACAvD,mEAEAvL,2BAMA,GALA,2CACAgP,sBACAxS,kBACA,IAEA,2BAEA,OADAwS,uBACA,KAEA,gDAKA,0BACA,OACApM,sDACAwM,wDACAC,sBACAlR,YACAuN,gBACAH,kEACAuD,kEAEA,0BAEA,GADA,2CACA,4BACA,qBACAtS,kBAEA,IAEA,OACAyS,gBACAC,OACAI,0BAGA,4CAGAvF,yBAEA,GADA,kDACA,qDACA,gDACA,+DAEA,+BACA,iCACAwF,oBACA/Q,WACAgR,OACA,0CAEA,mCACA,6CAGA,+BAEAC,kBACA,qBAEA,8BACA,SACA,KACA,iCACA,kDAEA,OADAC,WACA,IAGA,GACA,YAEAC,EADA,6BACAA,wBAEAA,sCAIA,OACAC,uDACAD,oBACAb,mDACAvD,qDAEA,0BAGA,GAFA,8BACA,6BACA,yCACA,yCACA,wBACA,qBACAiE,QACAhT,sBACA,IAEAqT,OACA,0FACA,wFAEA,OACAZ,QAAAa,YACAZ,OACAI,sCAIAS,kBACA,mCACA,oCAEAzG,gBACA,oBAAA0G,cAAAC,WAEApG,cACA,+BAEAC,wBACA,wEACA,8BAEAM,4BACA,oCACA,2BACA,yBACA,kCAEAC,4BACA,wEACA6F,4FACA,2EAEA,sBACA,iEACA,oBACA,8CAGA5F,wBACA,qDACA,qCAEAjC,iBACA,gBACA,kBAEA8H,cACA,mCC1+B4X,I,yBCQxXnI,EAAY,eACd,EACA/E,EACAkE,GACA,EACA,KACA,WACA,MAIa,aAAAa,E","file":"js/chunk-a2096f48.js","sourcesContent":["let inputRequiredValidateObj = {\n  required: true,\n  message: 'Please enter content',\n  trigger: 'blur',\n};\n\nlet checkRequiredValidateObj = {\n  required: true,\n  message: 'Please check content',\n  trigger: 'blur',\n};\n\nlet selectRequiredValidateObj = {\n  required: true,\n  message: 'Please select content',\n  trigger: 'change',\n};\n\nlet zeroAndPositiveNumberValidateObj = {\n  pattern: /^\\+?[0-9]*(\\.[0-9]*)?$/,\n  message: 'enter a non-nagative integer',\n  trigger: 'blur',\n};\n\nlet numberAndCharacterValidateObj = {\n  pattern: /^[0-9a-zA-Z]*$/,\n  message: 'Must be number and letters.',\n  trigger: 'blur',\n};\n\nlet integerValidateObj = {\n  pattern: /^[+-]?[0-9]*$/,\n  message: 'Must be integer number.',\n  trigger: 'blur',\n};\nlet msisdnValidateObj = {\n  pattern: /[0-9]{4}/,\n  message: 'The MSISDN must contain at least 4 dligits',\n  trigger: 'blur',\n};\n\nlet phoneNumberRuleObj = {\n  pattern: /^((13[5-9])|(1[4-9][0-9]))[0-9]{8}$/,\n  message: 'The regular expression is ^((13[5-9])|(1[4-9][0-9]))[0-9]{8}$.',\n  trigger: 'blur',\n};\n\nlet emailRuleObj = {\n  pattern: /^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/,\n  message: 'The regular expression is ^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\\\.[a-zA-Z0-9_-]+)+$.',\n  trigger: 'blur',\n};\n\nlet emailValidateObj = {\n  type: 'email',\n  message: 'Invalid email address.',\n  trigger: 'blur',\n};\n\nlet nonSpecialCharValidateObj = {\n  pattern: /^[^@~`！!#$%^*（）()\\-+=|,/<>《》?？;':\\\"“\\[\\]{}\\\\&]*$/,\n  message: 'Cannot contain special characters (~`!#$%^*()-+=|,/<>?;\\':\"[]{}\\\\&)',\n  trigger: 'blur',\n};\n\nlet nonSpecialCharExceptPercentSignValidateObj = {\n  pattern: /^[^@~`！!#$^*（）()\\-+=|,/<>《》?？;':\\\"“\\[\\]{}\\\\&]*$/,\n  message: 'Cannot contain special characters (~`!#$^*()-+=|,/<>?;\\':\"[]{}\\\\&)',\n  trigger: 'blur',\n};\n\nlet nameValidateObj = {\n  pattern: /^[a-zA-Z][\\s\\w.-]*$/,\n  message: 'The regular expression is ^[a-zA-Z][\\\\s\\\\w.-]*$',\n  trigger: 'blur',\n};\nlet nonSpecialValidateObj = {\n  pattern: /^[\\w- ]+$/,\n  message: 'Please do not enter any special characters.',\n  trigger: 'blur',\n};\n\nexport {\n  inputRequiredValidateObj,\n  zeroAndPositiveNumberValidateObj,\n  checkRequiredValidateObj,\n  numberAndCharacterValidateObj,\n  selectRequiredValidateObj,\n  emailValidateObj,\n  nonSpecialCharValidateObj,\n  nameValidateObj,\n  phoneNumberRuleObj,\n  emailRuleObj,\n  integerValidateObj,\n  msisdnValidateObj,\n  nonSpecialCharExceptPercentSignValidateObj,\n  nonSpecialValidateObj,\n};\n\nexport const len0To11StrValidateObj = getStrLenValidateObj({\n  minLen: 0,\n  maxLen: 11,\n});\nexport const len0To18StrValidateObj = getStrLenValidateObj({\n  minLen: 0,\n  maxLen: 18,\n});\n\nexport const len3To3StrValidateObj = getStrLenValidateObj({\n  minLen: 3,\n  maxLen: 3,\n});\n\nexport const len6To16StrValidateObj = getStrLenValidateObj({\n  minLen: 6,\n  maxLen: 16,\n});\n\nexport const len8To10StrValidateObj = getStrLenValidateObj({\n  minLen: 8,\n  maxLen: 10,\n});\nexport const len8To11StrValidateObj = getStrLenValidateObj({\n  minLen: 8,\n  maxLen: 11,\n});\n\nexport const len4To12StrValidateObj = getStrLenValidateObj({\n  minLen: 4,\n  maxLen: 12,\n});\n\nexport const len6To12StrValidateObj = getStrLenValidateObj({\n  minLen: 6,\n  maxLen: 12,\n});\n\nexport const len19StrValidateObj = getStrLenValidateObj({\n  minLen: 0,\n  maxLen: 19,\n});\n\nexport const len24StrValidateObj = getStrLenValidateObj({\n  minLen: 0,\n  maxLen: 24,\n});\n\nexport const len64StrValidateObj = getStrLenValidateObj({\n  minLen: 0,\n  maxLen: 64,\n});\n\nexport const len100StrValidateObj = getStrLenValidateObj({\n  minLen: 0,\n  maxLen: 100,\n});\n\nexport const len256StrValidateObj = getStrLenValidateObj({\n  minLen: 0,\n  maxLen: 256,\n});\n\nexport const len512StrValidateObj = getStrLenValidateObj({\n  minLen: 0,\n  maxLen: 512,\n});\n\nexport const len8To50StrValidateObj = getStrLenValidateObj({\n  minLen: 8,\n  maxLen: 50,\n});\nexport const len1To18StrValidateObj = getStrLenValidateObj({\n  minLen: 1,\n  maxLen: 18,\n});\n\nexport const len0To32StrValidateObj = getStrLenValidateObj({\n  minLen: 0,\n  maxLen: 32,\n});\n\nexport const len0To30StrValidateObj = getStrLenValidateObj({\n  minLen: 0,\n  maxLen: 30,\n});\n\nexport const len9To18StrValidateObj = getStrLenValidateObj({\n  minLen: 9,\n  maxLen: 18,\n});\n\nexport const len256to2StrValidateObj = getStrLenValidateObj({\n  minLen: 2,\n  maxLen: 256,\n});\n\n/**\n * 获取字符串校验对象\n * @param {minLen, maxLen} 最小，最大长度\n */\nexport function getStrLenValidateObj({ minLen = 0, maxLen = 100 }) {\n  let msg = '';\n  if (minLen > 0) {\n    msg = `Must be between ${minLen} and ${maxLen} characters`;\n  } else {\n    msg = `Must be less than ${maxLen} characters`;\n  }\n  return {\n    min: minLen,\n    max: maxLen,\n    message: msg,\n    trigger: 'blur',\n  };\n}\n\nexport const len4to0trValidateObj = getStrLenValidateObj({\n  minLen: 0,\n  maxLen: 4,\n});\n\n// 将路径表达式转换取值方法\nexport function parsePath(path) {\n  const arr = path.split('.');\n  return function (data) {\n    for (const key of arr) {\n      if (!data) {\n        return;\n      }\n      data = data[key];\n    }\n    return data;\n  };\n}\n\n// 校验模糊查询是否输入了内容\nexport function checkFuzzySearchInput(obj) {\n  let arr = [];\n  for (let item in obj) {\n    if ((obj[item] && obj[item].toString().startsWith('%') && obj[item].length === 1) || !obj[item]) {\n      arr.push(false);\n    } else {\n      arr.push(true);\n    }\n  }\n  if (arr.every((item) => item === false)) {\n    return false;\n  }\n  return true;\n}\n\nexport function checkLengthExceptPercentSign(errorMsg) {\n  return {\n    validator: (rule, value, callback) => {\n      if (value && value.startsWith('%') && value.length === 1) {\n        callback(new Error(`${errorMsg}`));\n      } else {\n        callback();\n      }\n    },\n    trigger: 'blur',\n  };\n}\n\nexport function checkmsisdnLengthExceptPercentSign() {\n  return {\n    validator: (rule, value, callback) => {\n      if (value && value.startsWith('%') && value.length <= 4) {\n        callback(new Error('The MSISDN must contain at least 4 digits.'));\n      } else {\n        callback();\n      }\n    },\n    trigger: 'blur',\n  };\n}\n","import cookie from './cookie';\nimport { MessageBox } from 'element-ui';\n\nexport default {\n  downLoadFile: function (url, data, method, hasXXSRFTOKEN) {\n    let xhr = new XMLHttpRequest();\n    xhr.open(method || 'POST', url, true);\n    xhr.setRequestHeader('Content-type', 'application/json');\n    if (hasXXSRFTOKEN) {\n      xhr.setRequestHeader('X-XSRF-TOKEN', cookie.get('O-XSRF-TOKEN'));\n    }\n    xhr.setRequestHeader('o-token', cookie.get('o-token'));\n    xhr.setRequestHeader('Cache-Control', 'no-store, max-age=0, must-revalidate');\n    xhr.responseType = 'blob'; // 返回类型blob\n    xhr.onload = function () {\n      // 定义请求完成的处理函数，请求前也可以增加加载框/禁用下载按钮逻辑\n      if (this.status === 200) {\n        let blob = this.response;\n        let temp = xhr.getResponseHeader('content-disposition').split(';')[1].split('filename=')[1];\n        let fileName = decodeURIComponent(temp);\n        let zipUrl = URL.createObjectURL(blob);\n        let link = document.createElement('a');\n        link.href = zipUrl;\n        link.download = fileName;\n        link.click();\n      } else {\n        MessageBox.alert('Download failed.', 'Error', { type: 'error', confirmButtonText: 'Confirm' });\n      }\n    };\n    xhr.send(JSON.stringify(data));\n  },\n};\n","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=4d83f279&prod&lang=scss&scoped=true&\"","import request from '@/common/utils/request';\nimport { buildUrlWithObj } from '@/common/utils/url-utils';\nimport FileUtil from '@/common/utils/file-utils';\n\n// 查询mytodo待办任务\nexport function queryMyToDoTask(data) {\n  return request({\n    url: '/fintech/v1/workFlow/queryMyToDoTask',\n    method: 'post',\n    data,\n  });\n}\n// 查询Group任务\nexport function queryGroupTask(data) {\n  return request({\n    url: '/fintech/v1/workFlow/queryGroupTask',\n    method: 'post',\n    data,\n  });\n}\n// 查询TaskName弹窗数据，无需传参\nexport function queryTaskName(data) {\n  return request({\n    url: '/fintech/v1/workFlow/task-type/list',\n    method: 'post',\n    data,\n  });\n}\n// 查询workFlowName弹窗数据,无需传参\nexport function queryWorkFlowName(data) {\n  return request({\n    url: '/fintech/v1/workFlow/workFlow-name/list',\n    method: 'post',\n    data,\n  });\n}\n// 查询Current Handler、Operator\nexport function queryCurrentHandler(data) {\n  return request({\n    url: '/fintech/v1/workFlow/spOperator/list',\n    method: 'post',\n    data,\n  });\n}\n// 之前接口list\nexport function queryOrgCurrentHandler(data) {\n  return request({\n    url: '/fintech/v1/orgOperator/queryOrgOperatorList',\n    method: 'post',\n    data,\n  });\n}\n// 查询Role\nexport function queryRole(data) {\n  return request({\n    url: '/fintech/role/v1/list',\n    method: 'post',\n    data,\n  });\n}\n// 处理Process\nexport function batchProcess(data) {\n  return request({\n    url: '/fintech/v1/workflow/mytask/task/batchProcess',\n    method: 'post',\n    data,\n  });\n}\n// 查询工作流\nexport function queryManageList(data) {\n  return request({\n    url: '/v1/workFlow/queryManageList',\n    method: 'post',\n    data,\n  });\n}\n// 查询工作流实例历史\nexport function queryManageHistory(data) {\n  return request({\n    url: '/fintech/v1/workFlow/queryHistoryTask',\n    method: 'post',\n    data,\n  });\n}\n// 查询工作流实例详情\nexport function queryManageDetail(data) {\n  return request({\n    url: '/v1/workFlow/queryManageDetail',\n    method: 'post',\n    data,\n  });\n}\n// 查询Active Task、Active任务详情\nexport function queryActiveTask(data) {\n  return request({\n    url: '/fintech/v1/workFlow/queryActiveTask',\n    method: 'post',\n    data,\n  });\n}\n// 查询历史任务\nexport function queryHistoryTask(data) {\n  return request({\n    url: '/fintech/v1/workFlow/queryHistoryTask',\n    method: 'post',\n    data,\n  });\n}\n// 查询历史任务详情、查询My Initiated Task\nexport function queryMyInitiatedTask(data) {\n  return request({\n    url: '/fintech/v1/workFlow/queryInitiatedWorkflow',\n    method: 'post',\n    data,\n  });\n}\n// 查询资源字典\nexport function queryWorkFlowDataDict(data) {\n  return request({\n    url: '/fintech/v1/workFlow/data-dict/list',\n    method: 'post',\n    data,\n  });\n}\n\nexport function queryTaskDetail(data) {\n  return request({\n    url: '/fintech/v1/workflow/process/details',\n    method: 'post',\n    data,\n  });\n}\nexport function searchTransactionByOrderId(data) {\n  return request({\n    url: '/fintech/v1/searchTransactionByOrderId',\n    method: 'post',\n    data,\n  });\n}\nexport function queryDetail(data) {\n  return request({\n    url: '/fintech/v1/transaction/order/orderDetail',\n    method: 'post',\n    data,\n  });\n}\n\nexport function queryOrgOperatorDetail(receiverId) {\n  return request({\n    url: `/fintech/v1/orgOperator/detail?receiverIdentityId=${receiverId}`,\n    method: 'get',\n  });\n}\n\nexport function changeStatus(data) {\n  return request({\n    url: 'fintech/v1/workFlow/process/backToInitiator',\n    method: 'post',\n    data,\n  });\n}\n\nexport function queryBulkSpecificInfo(data) {\n  return request({\n    url: buildUrlWithObj(`/fintech/v1/bulk/task/plan/detail?planID=${data}`),\n    method: 'get',\n  });\n}\n\nexport function queryValidRecords(params) {\n  return request({\n    url: '/fintech/v1/bulk/task/plan/validRecords',\n    params,\n  });\n}\nexport function kycDetails(data) {\n  return request({\n    url: '/fintech/v1/workflow/process/kycDetails',\n    method: 'post',\n    data,\n  });\n}\nexport function queryLanguageList() {\n  return request({\n    url: '/fintech/v1/organization/languages',\n    method: 'get',\n  });\n}\n\n/**\n * 被退回的任务编辑状态\n * @param {*} data\n * @returns\n */\nexport const queryBackToInitiator = (data) => {\n  return request({\n    url: '/fintech/v1/workFlow/process/backToInitiator',\n    method: 'post',\n    data,\n  });\n};\n/**\n * kyc相关\n * @param {*} data\n * @returns\n */\nexport function queryBackKycToInitiator(data) {\n  return request({\n    url: 'fintech/v1/workFlow/process/backKycToInitiator',\n    method: 'post',\n    data,\n  });\n}\n\n/**\n * 组织产品格转化\n */\nexport const querySubscribeProductsForWorkFlow = (data) => {\n  return request({\n    url: '/fintech/v1/organization/querySubscribeProductsForWorkFlow',\n    method: 'post',\n    data,\n  });\n};\n","import { inputRequiredValidateObj } from '@/common/validator/common';\nlet nonSpecialCharValidate = {\n  pattern: /^[^@~`！!#$^*（）()\\-+=|,/<>《》?？;':\\\"“\\[\\]{}\\\\&]*$/,\n  message: 'Cannot contain special characters (~`!#$^*()-+=|,/<>?;\\':\"[]{}\\\\&)',\n  trigger: 'blur',\n};\nfunction dateValidate(rule, val, callback) {\n  if (val) {\n    let sTime = val[0];\n    let startTime = new Date(sTime).getTime();\n    let eTime = val[1];\n    let endTime = new Date(eTime).getTime();\n    let result = endTime - startTime < 31 * 24 * 3600 * 1000;\n    if (result) {\n      callback();\n    } else {\n      callback(new Error('The time period cannot exceed 31 days'));\n    }\n  }\n  callback();\n}\nconst taskHistoryRules = () => {\n  return {\n    userName: [nonSpecialCharValidate],\n    firstName: [nonSpecialCharValidate],\n    middleName: [nonSpecialCharValidate],\n    lastName: [nonSpecialCharValidate],\n    taskNo: [nonSpecialCharValidate],\n    taskName: [nonSpecialCharValidate],\n    currentHandler: [nonSpecialCharValidate],\n    workflowId: [nonSpecialCharValidate],\n    workflowName: [nonSpecialCharValidate],\n    remark: [nonSpecialCharValidate],\n    shortCode: [\n      nonSpecialCharValidate,\n      inputRequiredValidateObj,\n      { required: true, message: 'This field is mandatory.', trigger: 'change' },\n    ],\n  };\n};\nconst dateValidateRule = () => {\n  return {\n    creationTime: [{ required: false }, { validator: dateValidate, trigger: 'change' }],\n    startTime: [{ required: false }, { validator: dateValidate, trigger: 'change' }],\n  };\n};\nconst groupTaskRulus = () => {\n  return {\n    operation: [\n      nonSpecialCharValidate,\n      inputRequiredValidateObj,\n      { required: true, message: 'please enter', trigger: 'change' },\n    ],\n    remark: [\n      nonSpecialCharValidate,\n      inputRequiredValidateObj,\n      { required: true, message: 'This field is mandatory.', trigger: 'blur' },\n    ],\n  };\n};\nexport { taskHistoryRules, groupTaskRulus, dateValidateRule };\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('el-dialog',{staticClass:\"dialog-portal\",class:{ 'dialog-overflow': _vm.isOverflowHeight },attrs:{\"title\":_vm.title,\"visible\":_vm.visible,\"width\":_vm.width,\"close-on-click-modal\":_vm.closeOnClickModal,\"before-close\":_vm.handleClose},on:{\"update:visible\":function($event){_vm.visible=$event},\"opened\":_vm.openedDialog,\"closed\":_vm.closedDialog}},[_vm._t(\"operation\"),_c('div',{staticStyle:{\"padding\":\"0 20px\"}},[_c('el-divider',{staticClass:\"dialog-top-divider\"})],1),(_vm.dialogSearchFormVisibility)?_c('portal-form',{ref:\"dialogSearchForm\",staticClass:\"dialog-search-form\",attrs:{\"needBottomLine\":_vm.needSearchFormBottomLine,\"form-config-list\":_vm.searchForm.formConfigList,\"form-data\":_vm.searchForm.formData,\"form-rules\":_vm.formRules,\"needOperateBtn\":_vm.needSearchOperateBtn,\"searchBtnLoading\":_vm.searchLoading,\"smallAutoColumn\":_vm.smallAutoColumn,\"bigAutoColumn\":_vm.bigAutoColumn},on:{\"common-enter-event\":_vm.enterEvent,\"reset-btn-click\":_vm.reset,\"search-btn-click\":_vm.search}}):_vm._e(),(_vm.dialogTableVisibility)?_c('div',{staticClass:\"table-container\"},[_c('table-page',{ref:\"dialogTable\",attrs:{\"is-check\":_vm.dialogTable.isCheck || true,\"is-search\":_vm.tableIsSearch,\"columns\":_vm.dialogTable.columns || [],\"has-pagination\":_vm.dialogTable.hasPagination || false,\"pagination\":_vm.dialogTable.paginationConfig || {},\"getTableData\":_vm.dialogTable.getTableData,\"id-key\":_vm.dialogTable.idKey || 'id',\"isSingleCheck\":_vm.isSingleCheck},on:{\"selection-change\":_vm.onSelectionChange,\"single-selection-change\":_vm.singleChange}})],1):_vm._e(),_c('div',{staticStyle:{\"padding\":\"0 20px\"}},[(_vm.configFormBottomLine)?_c('el-divider',{staticClass:\"config-form-bottomLine\"}):_vm._e()],1),(_vm.dialogConfigFormVisibility)?_c('portal-form',{ref:\"dialogConfigForm\",staticClass:\"dialogConfigForm\",attrs:{\"needBottomLine\":false,\"form-config-list\":_vm.configForm.formConfigList,\"form-data\":_vm.configForm.formData,\"form-rules\":_vm.configFormRules,\"needOperateBtn\":_vm.needOperateBtn,\"smallAutoColumn\":_vm.configForm.configSmall || 1,\"bigAutoColumn\":_vm.configForm.configBig || 1}}):_vm._e(),_c('div',{attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('button',{staticClass:\"cancel-button\",on:{\"click\":function($event){$event.preventDefault();return _vm.handleCancelClick.apply(null, arguments)}}},[_vm._v(_vm._s(_vm.cancelText))]),_c('el-button',{directives:[{name:\"preventReClick\",rawName:\"v-preventReClick\"}],attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":_vm.handleConfirmClick}},[_vm._v(_vm._s(_vm.confirmText))])],1)],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <el-dialog\n    :title=\"title\"\n    :visible.sync=\"visible\"\n    :width=\"width\"\n    class=\"dialog-portal\"\n    :class=\"{ 'dialog-overflow': isOverflowHeight }\"\n    :close-on-click-modal=\"closeOnClickModal\"\n    :before-close=\"handleClose\"\n    @opened=\"openedDialog\"\n    @closed=\"closedDialog\"\n  >\n    <slot name=\"operation\"></slot>\n    <div style=\"padding: 0 20px\">\n      <el-divider class=\"dialog-top-divider\"></el-divider>\n    </div>\n    <portal-form\n      v-if=\"dialogSearchFormVisibility\"\n      class=\"dialog-search-form\"\n      ref=\"dialogSearchForm\"\n      :needBottomLine=\"needSearchFormBottomLine\"\n      :form-config-list=\"searchForm.formConfigList\"\n      :form-data=\"searchForm.formData\"\n      :form-rules=\"formRules\"\n      :needOperateBtn=\"needSearchOperateBtn\"\n      :searchBtnLoading=\"searchLoading\"\n      :smallAutoColumn=\"smallAutoColumn\"\n      :bigAutoColumn=\"bigAutoColumn\"\n      @common-enter-event=\"enterEvent\"\n      @reset-btn-click=\"reset\"\n      @search-btn-click=\"search\"\n    ></portal-form>\n    <div v-if=\"dialogTableVisibility\" class=\"table-container\">\n      <table-page\n        ref=\"dialogTable\"\n        :is-check=\"dialogTable.isCheck || true\"\n        :is-search=\"tableIsSearch\"\n        :columns=\"dialogTable.columns || []\"\n        :has-pagination=\"dialogTable.hasPagination || false\"\n        :pagination=\"dialogTable.paginationConfig || {}\"\n        :getTableData=\"dialogTable.getTableData\"\n        :id-key=\"dialogTable.idKey || 'id'\"\n        :isSingleCheck=\"isSingleCheck\"\n        @selection-change=\"onSelectionChange\"\n        @single-selection-change=\"singleChange\"\n      ></table-page>\n    </div>\n    <div style=\"padding: 0 20px\">\n      <el-divider class=\"config-form-bottomLine\" v-if=\"configFormBottomLine\"></el-divider>\n    </div>\n    <portal-form\n      v-if=\"dialogConfigFormVisibility\"\n      class=\"dialogConfigForm\"\n      ref=\"dialogConfigForm\"\n      :needBottomLine=\"false\"\n      :form-config-list=\"configForm.formConfigList\"\n      :form-data=\"configForm.formData\"\n      :form-rules=\"configFormRules\"\n      :needOperateBtn=\"needOperateBtn\"\n      :smallAutoColumn=\"configForm.configSmall || 1\"\n      :bigAutoColumn=\"configForm.configBig || 1\"\n    ></portal-form>\n    <div slot=\"footer\">\n      <button class=\"cancel-button\" @click.prevent=\"handleCancelClick\">{{ cancelText }}</button>\n      <el-button type=\"primary\" size=\"small\" v-preventReClick @click=\"handleConfirmClick\">{{ confirmText }}</el-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport PortalForm from '@/components/portal-form';\nimport TablePage from '@/components/tablePage';\nexport default {\n  name: 'portalDialog',\n  components: {\n    PortalForm,\n    TablePage,\n  },\n  props: {\n    title: {\n      type: String,\n      default: '',\n    },\n    closeOnClickModal: {\n      type: Boolean,\n      default: false,\n    },\n    dialogVisible: {\n      type: Boolean,\n      default: false,\n    },\n    isOverflowHeight: {\n      type: Boolean,\n      default: false,\n    },\n    width: {\n      type: String,\n      default: '800px',\n    },\n    cancelText: {\n      type: String,\n      default: 'Cancel',\n    },\n    confirmText: {\n      type: String,\n      default: 'Confirm',\n    },\n    searchForm: {\n      type: Object,\n      default: null,\n    },\n    formRules: {\n      type: Object,\n      default: () => ({}),\n    },\n    searchLoading: {\n      type: Boolean,\n      default: false,\n    },\n    smallAutoColumn: {\n      type: Number,\n      default: 2,\n      validate: (value) => {\n        return !(24 % value);\n      },\n    },\n    bigAutoColumn: {\n      type: Number,\n      default: 2,\n      validate: (value) => {\n        return !(24 % value);\n      },\n    },\n    enterEvent: {\n      type: Function,\n      default: () => {},\n    },\n    // table-property\n    dialogTable: {\n      type: Object,\n      default: () => ({}),\n    },\n    // configForm-property\n    configForm: {\n      type: Object,\n      default: () => ({}),\n    },\n    configFormRules: {\n      type: Object,\n      default: () => ({}),\n    },\n    needSearchFormBottomLine: {\n      type: Boolean,\n      default: false,\n    },\n    configFormBottomLine: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      visible: false,\n    };\n  },\n  computed: {\n    dialogSearchFormVisibility() {\n      if (this.searchForm.formConfigList === undefined) return false;\n      return this.searchForm.formConfigList.length > 0 ? true : false;\n    },\n    dialogConfigFormVisibility() {\n      if (this.configForm.formConfigList === undefined) return false;\n      return this.configForm.formConfigList.length > 0;\n    },\n    dialogTableVisibility() {\n      return this.dialogTable && this.dialogTable.columns.length > 0 ? true : false;\n    },\n    needSearchOperateBtn() {\n      if (this.searchForm.needOperateBtn === undefined) {\n        return true;\n      } else if (this.searchForm.needOperateBtn) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    needOperateBtn() {\n      if (this.configForm.needOperateBtn) {\n        return this.configForm.needOperateBtn;\n      } else {\n        return false;\n      }\n    },\n    tableIsSearch() {\n      if (this.dialogTable.isSearch) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    isSingleCheck() {\n      if (this.dialogTable.isSingleCheck) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    onSelectionChange() {\n      if (this.dialogTable.onSelectionChange) {\n        return this.dialogTable.onSelectionChange;\n      } else {\n        return () => {};\n      }\n    },\n    singleChange() {\n      if (this.dialogTable.singleChange) {\n        return this.dialogTable.singleChange;\n      } else {\n        return () => {};\n      }\n    },\n  },\n  watch: {\n    dialogVisible: {\n      handler(value) {\n        this.visible = value;\n      },\n      immediate: true,\n    },\n    visible: {\n      handler(newVal) {\n        this.$emit('show-dialog', newVal);\n        this.$emit('update:dialogVisible', newVal);\n      },\n    },\n  },\n  methods: {\n    handleClose() {\n      this.visible = false;\n    },\n    handleCancelClick() {\n      this.$emit('cancel-btn-click');\n    },\n    handleConfirmClick() {\n      this.$emit('confirm-btn-click');\n    },\n    closedDialog() {\n      this.$emit('closed-dialog');\n    },\n    openedDialog() {\n      this.$emit('opened-dialog');\n    },\n    reset() {\n      this.$emit('search-reset');\n    },\n    search() {\n      this.$refs.dialogSearchForm.validate((result) => {\n        if (result) {\n          this.dialogTable.isSearch = true;\n          this.$emit('update:searchLoading', true);\n        }\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n/deep/ .el-dialog__body {\n  margin: 0;\n  padding: 0 4px;\n}\n.dialog-overflow {\n  height: 87vh;\n  /deep/ .el-dialog__body {\n    overflow-y: scroll;\n    margin: 0;\n    padding: 0 4px;\n    max-height: calc(72vh - 150px);\n  }\n}\n/deep/ .el-divider {\n  margin-top: 24px;\n  margin-bottom: 0;\n}\n/deep/ .el-dialog__header {\n  padding: 24px 0 0 24px;\n}\n.cancel-button {\n  padding: 7px 15px;\n  height: 32px;\n  border-radius: 4px;\n  background-color: $base-menu-background;\n  border: 1px solid $--line_color--regular;\n  font-size: 14px;\n  color: $--text_color--strong;\n  box-sizing: border-box;\n  cursor: pointer;\n  margin-right: 8px;\n}\n.table-container {\n  padding: 20px;\n  .table-page-container {\n    /deep/.table-region {\n      .el-table__header-wrapper {\n        table {\n          thead {\n            .cell::after {\n              height: 13px;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/deep/ .config-form-bottomLine {\n  margin: 0;\n}\n/deep/ .dialog-top-divider {\n  height: 1px;\n  background-color: $base-menu-light-background;\n  box-shadow: 0px -1px 0px $--line_color--divider;\n  margin: 24px 0 0 0;\n}\n</style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=090905a0&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=090905a0&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"090905a0\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=090905a0&prod&lang=scss&scoped=true&\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"task-history-container\"},[_c('div',{staticClass:\"page-header\"},[_c('div',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.projectObj.title))]),_c('div',{staticClass:\"desc\"},[_vm._v(_vm._s(_vm.projectObj.desc))])]),_c('div',{staticClass:\"page-content\"},[_c('portal-form',{ref:\"searchFormRef\",attrs:{\"searchBtnLoading\":_vm.searchLoading,\"form-config-list\":_vm.formConfigList,\"formRules\":_vm.dateValidate,\"form-data\":_vm.formData},on:{\"reset-btn-click\":_vm.resetSearch,\"search-btn-click\":_vm.search}}),_c('div',{staticClass:\"table-container\"},[_c('div',{staticClass:\"table-operate-header\"},[_c('span'),_c('div',{staticClass:\"right-btn\"},[_c('el-select',{attrs:{\"size\":\"small\",\"clearable\":false,\"placeholder\":_vm.$t('common.placeholder.sortBy') + ''},on:{\"change\":_vm.handleCommand},model:{value:(_vm.sortTime),callback:function ($$v) {_vm.sortTime=$$v},expression:\"sortTime\"}},_vm._l((_vm.sortData),function(item){return _c('el-option',{key:item.label,attrs:{\"value\":item.value,\"label\":item.label}})}),1)],1)]),_c('table-page',{ref:\"workflowTableRef\",staticClass:\"initiated-workflow-table\",attrs:{\"columns\":_vm.columns,\"sortArr\":['creationTime', 'dueTime'],\"getTableData\":_vm.getTableData,\"has-pagination\":_vm.hasPagination,\"pagination\":_vm.paginationConfig,\"is-search\":_vm.isSearch},scopedSlots:_vm._u([{key:\"operation\",fn:function(scope){return (_vm.detailBtnIsShow(scope.data.row) && _vm.hasPerm('WF_MYTASK_HISTORY_VIEW_BTN'))?[_c('el-button',{attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.handleDetail(scope.data.row)}}},[_vm._v(_vm._s(_vm.$t('common.label.detail')))])]:undefined}},{key:\"taskStatus\",fn:function(scope){return [_c('div',{staticClass:\"flex flex-align\"},[_c('span',{staticClass:\"status-circle\",style:(_vm.statusStyle(scope.data.row))}),_c('span',[_vm._v(_vm._s(scope.data.row.status))])])]}}],null,true)})],1)],1),_c('div',{staticClass:\"page-dialog\"},[_c('portal-dialog',{ref:\"selectTaskNameDialogRef\",staticClass:\"select-task-name\",attrs:{\"title\":\"Select Task Name\",\"dialogVisible\":_vm.taskNameDialogVisible,\"searchForm\":_vm.taskNameSearchForm,\"needSearchFormBottomLine\":true,\"formRules\":_vm.formRules,\"dialogTable\":_vm.dialogTable,\"searchLoading\":_vm.taskNameSearchLoading},on:{\"update:dialogVisible\":function($event){_vm.taskNameDialogVisible=$event},\"update:dialog-visible\":function($event){_vm.taskNameDialogVisible=$event},\"update:searchLoading\":function($event){_vm.taskNameSearchLoading=$event},\"update:search-loading\":function($event){_vm.taskNameSearchLoading=$event},\"close-dialog\":_vm.closeDialog,\"search-reset\":_vm.selectTaskDialogReset,\"cancel-btn-click\":_vm.closeDialog,\"confirm-btn-click\":_vm.comfirmTaskNameHandler}}),_c('portal-dialog',{ref:\"selectOperatorDialogRef\",staticClass:\"select-operator-dialog\",attrs:{\"title\":\"Select Operator\",\"dialogVisible\":_vm.selectOperatorDialogVisible,\"searchForm\":_vm.selectOperatorSearchForm,\"needSearchFormBottomLine\":true,\"formRules\":_vm.formRules,\"dialogTable\":_vm.selectOperatorDialogTable,\"searchLoading\":_vm.selectOperatorSearchLoading},on:{\"update:dialogVisible\":function($event){_vm.selectOperatorDialogVisible=$event},\"update:dialog-visible\":function($event){_vm.selectOperatorDialogVisible=$event},\"close-dialog\":_vm.selectOperatorCloseDialog,\"search-reset\":_vm.selectOperatorDialogReset,\"cancel-btn-click\":_vm.selectOperatorCloseDialog,\"confirm-btn-click\":_vm.comfirmselectOperator}})],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"task-history-container\">\n    <div class=\"page-header\">\n      <div class=\"title\">{{ projectObj.title }}</div>\n      <div class=\"desc\">{{ projectObj.desc }}</div>\n    </div>\n    <div class=\"page-content\">\n      <portal-form\n        ref=\"searchFormRef\"\n        :searchBtnLoading=\"searchLoading\"\n        :form-config-list=\"formConfigList\"\n        :formRules=\"dateValidate\"\n        :form-data=\"formData\"\n        @reset-btn-click=\"resetSearch\"\n        @search-btn-click=\"search\"\n      ></portal-form>\n      <div class=\"table-container\">\n        <div class=\"table-operate-header\">\n          <span> </span>\n          <div class=\"right-btn\">\n            <el-select\n              size=\"small\"\n              :clearable=\"false\"\n              v-model=\"sortTime\"\n              @change=\"handleCommand\"\n              :placeholder=\"$t('common.placeholder.sortBy') + ''\"\n            >\n              <el-option v-for=\"item in sortData\" :key=\"item.label\" :value=\"item.value\" :label=\"item.label\"></el-option>\n            </el-select>\n          </div>\n        </div>\n        <table-page\n          class=\"initiated-workflow-table\"\n          ref=\"workflowTableRef\"\n          :columns=\"columns\"\n          :sortArr=\"['creationTime', 'dueTime']\"\n          :getTableData=\"getTableData\"\n          :has-pagination=\"hasPagination\"\n          :pagination=\"paginationConfig\"\n          :is-search=\"isSearch\"\n        >\n          <template\n            slot-scope=\"scope\"\n            slot=\"operation\"\n            v-if=\"detailBtnIsShow(scope.data.row) && hasPerm('WF_MYTASK_HISTORY_VIEW_BTN')\"\n          >\n            <el-button type=\"text\" @click=\"handleDetail(scope.data.row)\">{{ $t('common.label.detail') }}</el-button>\n          </template>\n          <template slot-scope=\"scope\" slot=\"taskStatus\">\n            <div class=\"flex flex-align\">\n              <span class=\"status-circle\" :style=\"statusStyle(scope.data.row)\"></span>\n              <span>{{ scope.data.row.status }}</span>\n            </div>\n          </template>\n        </table-page>\n      </div>\n    </div>\n    <div class=\"page-dialog\">\n      <!-- select-taskName-dialog -->\n      <portal-dialog\n        title=\"Select Task Name\"\n        class=\"select-task-name\"\n        ref=\"selectTaskNameDialogRef\"\n        :dialogVisible.sync=\"taskNameDialogVisible\"\n        :searchForm=\"taskNameSearchForm\"\n        :needSearchFormBottomLine=\"true\"\n        :formRules=\"formRules\"\n        :dialogTable=\"dialogTable\"\n        :searchLoading.sync=\"taskNameSearchLoading\"\n        @close-dialog=\"closeDialog\"\n        @search-reset=\"selectTaskDialogReset\"\n        @cancel-btn-click=\"closeDialog\"\n        @confirm-btn-click=\"comfirmTaskNameHandler\"\n      ></portal-dialog>\n      <!-- select-operator-dialog -->\n      <portal-dialog\n        title=\"Select Operator\"\n        class=\"select-operator-dialog\"\n        ref=\"selectOperatorDialogRef\"\n        :dialogVisible.sync=\"selectOperatorDialogVisible\"\n        :searchForm=\"selectOperatorSearchForm\"\n        :needSearchFormBottomLine=\"true\"\n        :formRules=\"formRules\"\n        :dialogTable=\"selectOperatorDialogTable\"\n        :searchLoading=\"selectOperatorSearchLoading\"\n        @close-dialog=\"selectOperatorCloseDialog\"\n        @search-reset=\"selectOperatorDialogReset\"\n        @cancel-btn-click=\"selectOperatorCloseDialog\"\n        @confirm-btn-click=\"comfirmselectOperator\"\n      ></portal-dialog>\n    </div>\n  </div>\n</template>\n\n<script>\nimport PortalForm from '@/components/portal-form';\nimport TablePage from '@/components/tablePage';\nimport PortalDialog from '@/views/task-center/component/portal-dialog';\nimport { taskHistoryRules, dateValidateRule } from '@/views/task-center/validator/index';\nimport {\n  queryHistoryTask,\n  queryTaskName,\n  queryCurrentHandler,\n  queryOrgCurrentHandler,\n  queryWorkFlowDataDict,\n} from '@/views/task-center/api/api-task-center';\nimport dayjs from 'dayjs';\n\nexport default {\n  name: 'taskHistory',\n  components: {\n    PortalForm,\n    TablePage,\n    PortalDialog,\n  },\n  data() {\n    return {\n      projectObj: {\n        title: this.$t('TAC.taskHistoryManagement.title'),\n        desc: this.$t('TAC.taskHistoryManagement.desc'),\n      },\n      searchLoading: false,\n      formData: {\n        taskNo: '',\n        priority: '',\n        taskName: '',\n        taskType: '',\n        status: '',\n        dueTime: '',\n        creationTime: '',\n        currentHandler: '',\n      },\n      dateValidate: dateValidateRule(),\n      tempTaskName: '',\n      curSelectTaskNameToTaskType: '',\n      tempCurrentHandler: '',\n      sortTime: '',\n      searchFormPriority: [{ label: 'All', value: '' }],\n      searchFormTaskType: [{ label: 'All', value: '' }],\n      searchFormStatus: [{ label: 'All', value: '' }],\n      sortData: [],\n      columns: [\n        {\n          label: this.$t('TAC.myTodo.taskNo'),\n          prop: 'workflowId',\n          align: 'left',\n          width: '150px',\n        },\n        {\n          label: this.$t('TAC.myTodo.description'),\n          prop: 'description',\n          align: 'left',\n          width: '200px',\n        },\n        {\n          label: this.$t('TAC.myTodo.priority'),\n          prop: 'priority',\n          align: 'left',\n          width: '150px',\n        },\n        {\n          label: this.$t('TAC.myTodo.creationTime'),\n          prop: 'creationTime',\n          width: '150px',\n          align: 'left',\n          'sort-method': (a, b) => {\n            return a.creationTime > b.creationTime ? 1 : -1;\n          },\n        },\n        {\n          label: this.$t('TAC.taskHistoryManagement.endTime'),\n          prop: 'dueTime',\n          width: '150px',\n          align: 'left',\n          'sort-method': (a, b) => {\n            return a.dueTime > b.dueTime ? 1 : -1;\n          },\n        },\n        {\n          label: this.$t('TAC.taskHistoryManagement.initiator'),\n          prop: 'initiator',\n          align: 'left',\n          width: '150px',\n        },\n        {\n          label: this.$t('TAC.myInitiatedWorkFlow.status'),\n          prop: 'status',\n          align: 'left',\n          width: '150px',\n          __slotName: 'taskStatus',\n          'sort-method': (a, b) => {\n            return a.status > b.status ? 1 : -1;\n          },\n        },\n        {\n          label: this.$t('TAC.taskHistoryManagement.processResult'),\n          prop: 'processResult',\n          align: 'left',\n          width: '150px',\n        },\n        {\n          label: this.$t('TAC.taskHistoryManagement.currentHandler'),\n          prop: 'currentHandler',\n          align: 'left',\n          width: '150px',\n        },\n        {\n          label: this.$t('TAC.myTodo.taskType'),\n          prop: 'taskType',\n          align: 'left',\n          width: '150px',\n        },\n        {\n          label: this.$t('TAC.myInitiatedWorkFlow.operation'),\n          prop: 'operation',\n          align: 'left',\n          width: '150px',\n          __slotName: 'operation',\n          fixed: 'right',\n        },\n      ],\n      paginationConfig: {\n        total: 0,\n        pageIndex: 1,\n        pageSize: 10,\n      },\n      hasPagination: false,\n      isSearch: false,\n      taskNameDialogVisible: false,\n      taskNameSearchFormData: {\n        taskName: '',\n        taskType: '',\n      },\n      dialogTable: {\n        columns: [\n          {\n            label: this.$t('TAC.myTodo.taskName'),\n            prop: 'taskName',\n            align: 'left',\n          },\n          {\n            label: this.$t('TAC.myTodo.taskType'),\n            prop: 'taskType',\n            align: 'left',\n          },\n        ],\n        isSearch: false,\n        isSingleCheck: true,\n        hasPagination: true,\n        paginationConfig: {\n          total: 0,\n          pageIndex: 1,\n          pageSize: 5,\n        },\n        getTableData: this.getTaskNameDialogData,\n        singleChange: this.selectTaskName,\n      },\n      taskNameSearchLoading: false,\n      selectOperatorDialogVisible: false,\n      selectOperatorSearchFormData: {\n        userName: '',\n        firstName: '',\n        middleName: '',\n        lastName: '',\n        operatorType: '',\n        shortCode: '',\n      },\n      formRules: taskHistoryRules(),\n      pickerOptions: {\n        onPick: ({ maxDate, minDate }) => {\n          this.selectDate = minDate.getTime();\n          if (maxDate) {\n            this.selectDate = '';\n          }\n        },\n        disabledDate: (time) => {\n          if (this.selectDate !== '') {\n            const one = 30 * 24 * 3600 * 1000;\n            const minTime = this.selectDate - one;\n            const maxTime = this.selectDate + one;\n            return time.getTime() < minTime || time.getTime() > maxTime;\n          }\n        },\n      },\n      selectOperatorDialogTable: {\n        columns: [\n          {\n            label: this.$t('TAC.myTodo.userName'),\n            prop: 'userName',\n            align: 'left',\n          },\n          {\n            label: this.$t('TAC.myTodo.firstName'),\n            prop: 'firstName',\n            align: 'left',\n          },\n          {\n            label: this.$t('TAC.myTodo.middleName'),\n            prop: 'middleName',\n            align: 'left',\n          },\n          {\n            label: this.$t('TAC.myTodo.lastName'),\n            prop: 'lastName',\n            align: 'left',\n          },\n        ],\n        isSearch: false,\n        isSingleCheck: true,\n        hasPagination: true,\n        paginationConfig: {\n          total: 0,\n          pageIndex: 1,\n          pageSize: 5,\n        },\n        getTableData: this.getHandlerData,\n        singleChange: this.selectOperator,\n      },\n      selectOperatorId: '',\n      newSearchType: false,\n      selectOperatorSearchLoading: false,\n      selectRoleFormConfigList: [\n        {\n          label: this.$t('TAC.myTodo.roleName'),\n          key: 'roleName',\n          prop: 'roleName',\n          comp: 'el-input',\n          bind: {\n            clearable: true,\n            placeholder: this.$t('common.placeholder.enter'),\n          },\n        },\n        {\n          label: this.$t('TAC.myTodo.roleCategory'),\n          key: 'roleCategory',\n          prop: 'roleCategory',\n          comp: 'el-select',\n          option: [\n            {\n              value: 'all',\n              label: 'All',\n            },\n          ],\n          bind: {\n            placeholder: this.$t('common.placeholder.enter'),\n          },\n        },\n      ],\n      selectRoleSearchFormData: {\n        roleName: '',\n        roleCategory: '',\n      },\n      tempOptConfigData: [],\n      tempOptFormData: {},\n      tempOptTableCol: [],\n      assignRoleFormConfigList: [\n        {\n          label: this.$t('TAC.myTodo.roleName'),\n          key: 'roleName',\n          prop: 'roleName',\n          comp: 'el-input',\n          bind: {\n            clearable: true,\n            placeholder: this.$t('common.placeholder.enter'),\n          },\n        },\n        {\n          label: this.$t('TAC.myTodo.roleCategory'),\n          key: 'roleCategory',\n          prop: 'roleCategory',\n          comp: 'el-select',\n          option: [\n            {\n              value: 'all',\n              label: 'All',\n            },\n          ],\n          bind: {\n            placeholder: this.$t('common.placeholder.enter'),\n          },\n        },\n      ],\n      assignRoleSearchFormData: {\n        roleName: '',\n        roleCategory: '',\n      },\n      tempConfig: {\n        label: this.$t('TAC.activeTaskManagement.shortCode'),\n        key: 'shortCode',\n        prop: 'shortCode',\n        comp: 'el-input',\n        bind: {\n          clearable: true,\n          placeholder: this.$t('common.placeholder.enter'),\n        },\n      },\n    };\n  },\n  computed: {\n    formConfigList() {\n      return [\n        {\n          label: this.$t('TAC.myTodo.taskNo'),\n          key: 'taskNo',\n          prop: 'taskNo',\n          comp: 'el-input',\n          bind: {\n            clearable: true,\n            placeholder: this.$t('common.placeholder.enter'),\n          },\n        },\n        {\n          label: this.$t('TAC.myTodo.priority'),\n          key: 'priority',\n          prop: 'priority',\n          comp: 'el-select',\n          options: this.searchFormPriority,\n          bind: {\n            placeholder: this.$t('common.placeholder.enter'),\n          },\n        },\n        {\n          formItemClass: 'org-short-code',\n          label: this.$t('TAC.myTodo.taskName'),\n          key: 'taskName',\n          prop: 'taskName',\n          comp: 'el-input',\n          bind: {\n            clearable: true,\n            placeholder: this.$t('common.placeholder.select'),\n          },\n          slots: [\n            {\n              comp: 'el-link',\n              name: 'append',\n              class: 'short-code-icon',\n              bind: {\n                icon: 'el-icon-more',\n                underline: false,\n              },\n              event: {\n                click: () => {\n                  this.taskNameDialogVisible = true;\n                  this.taskNameSearchForm.formData.taskType = this.searchFormTaskType[0].value;\n                  this.dialogTable.isSearch = true;\n                },\n              },\n            },\n          ],\n        },\n        {\n          label: this.$t('TAC.myTodo.taskType'),\n          key: 'taskType',\n          prop: 'taskType',\n          comp: 'el-select',\n          options: this.searchFormTaskType,\n          bind: {\n            placeholder: this.$t('common.placeholder.select'),\n          },\n        },\n        {\n          formItemClass: 'org-short-code',\n          label: this.$t('TAC.taskHistoryManagement.Handler'),\n          key: 'currentHandler',\n          prop: 'currentHandler',\n          comp: 'el-input',\n          bind: {\n            clearable: true,\n            placeholder: this.$t('common.placeholder.select'),\n          },\n          slots: [\n            {\n              comp: 'el-link',\n              name: 'append',\n              class: 'short-code-icon',\n              bind: {\n                icon: 'el-icon-more',\n                underline: false,\n              },\n              event: {\n                click: () => {\n                  this.selectOperatorDialogVisible = true;\n                  this.selectOperatorSearchForm.formData.operatorType = 'spOperator';\n                },\n              },\n            },\n          ],\n        },\n        {\n          label: this.$t('TAC.myTodo.status'),\n          key: 'status',\n          prop: 'status',\n          comp: 'el-select',\n          options: this.searchFormStatus,\n          bind: {\n            placeholder: this.$t('common.placeholder.enter'),\n          },\n        },\n        {\n          label: this.$t('TAC.myTodo.creationTime'),\n          formItemClass: 'form-special-date-box',\n          sameGroup: true,\n          prop: 'creationTime',\n          comp: [\n            {\n              key: 'creationTime',\n              comp: 'el-date-picker',\n              bind: {\n                placeholder: this.$t('common.placeholder.enter'),\n                align: 'right',\n                type: 'datetimerange',\n                format: 'dd/MM/yyyy HH:mm:ss',\n                'picker-options': this.pickerOptions,\n                'range-separator': '~',\n                'value-format': 'yyyy-MM-dd HH:mm:ss',\n                'default-time': ['00:00:00', '23:59:59'],\n                'start-placeholder': 'Please select',\n                'end-placeholder': 'Please select',\n              },\n            },\n            {\n              comp: 'i',\n              class: 'el-icon-date data_icon',\n            },\n          ],\n        },\n        {\n          formItemClass: 'due-time',\n          label: this.$t('TAC.taskHistoryManagement.endTime'),\n          prop: 'dueTime',\n          key: 'dueTime',\n          comp: 'el-date-picker',\n          bind: {\n            type: 'datetime',\n            format: 'dd/MM/yyyy HH:mm:ss',\n            'value-format': 'yyyy-MM-dd HH:mm:ss',\n            placeholder: this.$t('common.placeholder.select'),\n          },\n        },\n      ];\n    },\n    taskNameSearchForm() {\n      return {\n        formConfigList: [\n          {\n            formItemClass: 'taskName',\n            label: this.$t('TAC.myTodo.taskName'),\n            key: 'taskName',\n            prop: 'taskName',\n            comp: 'el-input',\n            bind: {\n              clearable: true,\n              placeholder: this.$t('common.placeholder.enter'),\n            },\n          },\n          {\n            label: this.$t('TAC.myTodo.taskType'),\n            key: 'taskType',\n            prop: 'taskType',\n            comp: 'el-select',\n            options: this.searchFormTaskType,\n            bind: {\n              placeholder: this.$t('common.placeholder.select'),\n            },\n          },\n        ],\n        formData: this.taskNameSearchFormData,\n      };\n    },\n    selectOperatorSearchForm() {\n      return {\n        formConfigList: [\n          {\n            label: this.$t('TAC.myTodo.operatorType'),\n            key: 'operatorType',\n            prop: 'operatorType',\n            comp: 'el-select',\n            options: [\n              {\n                value: 'orgOperator',\n                label: 'Organization Operator',\n              },\n              {\n                value: 'spOperator',\n                label: 'SP Operator',\n              },\n            ],\n            bind: {\n              placeholder: this.$t('common.placeholder.select'),\n            },\n          },\n          {\n            label: this.$t('TAC.myTodo.userName'),\n            key: 'userName',\n            prop: 'userName',\n            comp: 'el-input',\n            bind: {\n              clearable: true,\n              placeholder: this.$t('common.placeholder.enter'),\n            },\n          },\n          {\n            label: this.$t('TAC.myTodo.firstName'),\n            key: 'firstName',\n            prop: 'firstName',\n            comp: 'el-input',\n            bind: {\n              clearable: true,\n              placeholder: this.$t('common.placeholder.enter'),\n            },\n          },\n          {\n            label: this.$t('TAC.myTodo.middleName'),\n            key: 'middleName',\n            prop: 'middleName',\n            comp: 'el-input',\n            formItemClass: {\n              isShow: true,\n            },\n            bind: {\n              clearable: true,\n              placeholder: this.$t('common.placeholder.enter'),\n            },\n          },\n          {\n            label: this.$t('TAC.myTodo.lastName'),\n            key: 'lastName',\n            prop: 'lastName',\n            comp: 'el-input',\n            bind: {\n              clearable: true,\n              placeholder: this.$t('common.placeholder.enter'),\n            },\n          },\n        ],\n        formData: this.selectOperatorSearchFormData,\n      };\n    },\n  },\n  created() {\n    this.formData.creationTime = [\n      dayjs(\n        new Date(new Date(dayjs().year(), dayjs().month(), dayjs().date(), 0, 0, 0).getTime() - 1000 * 3600 * 24 * 7)\n      ).format('YYYY-MM-DD HH:mm:ss'),\n      dayjs(new Date(dayjs().year(), dayjs().month(), dayjs().date(), 23, 59, 59)).format('YYYY-MM-DD HH:mm:ss'),\n    ];\n    this.queryDictDataList();\n  },\n  watch: {\n    selectOperatorSearchFormData: {\n      handler(val) {\n        if (val.operatorType === 'orgOperator') {\n          if (this.selectOperatorSearchForm.formConfigList.length === 5) {\n            this.newSearchType = true;\n            this.selectOperatorSearchForm.formConfigList.splice(1, 0, this.tempConfig);\n          }\n        } else {\n          if (this.selectOperatorSearchForm.formConfigList.length === 6) {\n            this.newSearchType = false;\n            this.selectOperatorSearchForm.formConfigList.splice(1, 1);\n          }\n        }\n        if (val.shortCode !== '') {\n          this.$refs.selectOperatorDialogRef.$refs.dialogSearchForm.clearValidate('shortCode');\n        }\n      },\n      deep: true,\n    },\n    newSearchType(val) {\n      if (val) {\n        this.selectOperatorDialogTable.getTableData = this.getOrgHandlerData;\n      } else {\n        this.selectOperatorDialogTable.getTableData = this.getHandlerData;\n      }\n    },\n    formData: {\n      handler(val) {\n        if (val.taskType === this.curSelectTaskNameToTaskType) return;\n        this.formData.taskName = '';\n      },\n      deep: true,\n    },\n  },\n  methods: {\n    statusStyle(row) {\n      switch (row.status) {\n        case 'Rejected':\n          return { 'background-color': `${this.GlobalStyleVariables.statusErrorColor}` };\n        case 'Cancelled':\n          return { 'background-color': `${this.GlobalStyleVariables.fillStrongColor}` };\n        case 'Expired':\n          return { 'background-color': `${this.GlobalStyleVariables.fillStrongColor}` };\n        case 'Completed':\n          return { 'background-color': `${this.GlobalStyleVariables.statusSuccessColor}` };\n        default:\n          break;\n      }\n    },\n    search() {\n      this.$refs.searchFormRef.validate((result) => {\n        if (result) {\n          this.searchLoading = true;\n          this.isSearch = true;\n        }\n      });\n    },\n    detailBtnIsShow(val) {\n      return val.viewFlag;\n    },\n    async queryDictDataList() {\n      let res = await queryWorkFlowDataDict({\n        dictCodes: [\n          'CPS.WORKFLOW.CONFIGURATION.PRIORITY',\n          'CPS.TASK.TYPE',\n          'CPS.WORKFLOW.HISTORY.ORDER.STATUS',\n          'WORK_FLOW_HISTORY_SORT_TIME',\n        ],\n      });\n      if (res.header && res.header.success) {\n        this.searchFormPriority = res.dictDetailsMap['CPS.WORKFLOW.CONFIGURATION.PRIORITY'];\n        if (this.searchFormPriority[0].label !== 'All') {\n          this.searchFormPriority.unshift({ label: 'All', value: '' });\n        }\n        this.searchFormTaskType = res.dictDetailsMap['CPS.TASK.TYPE'];\n        this.searchFormStatus = res.dictDetailsMap['CPS.WORKFLOW.HISTORY.ORDER.STATUS'];\n        if (this.searchFormStatus[0].label !== 'All') {\n          this.searchFormStatus.unshift({ label: 'All', value: '' });\n        }\n        this.sortData = res.dictDetailsMap['WORK_FLOW_HISTORY_SORT_TIME'].map((item) => {\n          if (item.label === 'Completion Time Oldest') {\n            item.label = 'End Time Oldest';\n          }\n          if (item.label === 'Completion Time Latest') {\n            item.label = ' End Time Latest';\n          }\n          return item;\n        });\n        this.sortTime = 'CREATE_TIME_LATEST';\n      }\n    },\n    resetSearch() {\n      this.$refs.searchFormRef.resetFields();\n      this.tempCurrentHandler = '';\n      this.selectOperatorId = '';\n      this.isSearch = true;\n    },\n    resConverseList(resDataList, receiveObj) {\n      receiveObj.list = resDataList.map((item) => {\n        let priority = '';\n        if (item.taskPriority === '200') {\n          priority = 'High';\n        } else if (item.taskPriority === '100') {\n          priority = 'Medium';\n        } else {\n          priority = 'Low';\n        }\n        let category = '';\n        this.searchFormTaskType.some((tskItem) => {\n          if (tskItem.value === item.category) {\n            category = tskItem.label;\n            return true;\n          }\n        });\n        let time = item.createTime.split(' ');\n        let date = time[0].split('-');\n        let creTime = date[2] + '/' + date[1] + '/' + date[0] + ' ' + time[1];\n        let expireTime = item.completedTime.split(' ');\n        let expDate = expireTime[0].split('-');\n        let dueTime = expDate[2] + '/' + expDate[1] + '/' + expDate[0] + ' ' + expireTime[1];\n        return {\n          workflowId: item.taskId,\n          description: item.taskDesc,\n          workflowName: item.procDefId,\n          workflowType: item.taskType,\n          creationTime: creTime,\n          dueTime: dueTime,\n          status: item.taskState,\n          taskType: category,\n          taskId: item.taskId,\n          initiator: item.initiatorName,\n          processResult: item.outComeType,\n          priority,\n          currentHandler: item.ownerName,\n          viewFlag: item.viewFlag,\n          formURL: item.formURL,\n          processFlag: item.processFlag,\n        };\n      });\n    },\n    async getTableData() {\n      let tskType = '';\n      if (this.formData.taskType.length > 1) {\n        this.searchFormTaskType.some((item) => {\n          if (item.label === this.formData.taskType) {\n            tskType = item.value;\n            return true;\n          }\n        });\n      } else {\n        tskType = this.formData.taskType;\n      }\n      let params = {\n        taskId: this.formData.taskNo,\n        taskName: this.formData.taskName,\n        category: tskType,\n        priority: this.formData.priority,\n        dueTime: this.formData.dueTime,\n        status: this.formData.status,\n        ownerId: this.selectOperatorId,\n        createTimeFrom: this.formData.creationTime[0],\n        createTimeTo: this.formData.creationTime[1],\n        sortingMode: this.sortTime || 'CREATE_TIME_LATEST',\n        pageNo: this.paginationConfig.pageIndex,\n        pageSize: this.paginationConfig.pageSize,\n      };\n      let res = await queryHistoryTask({ taskVO: params });\n      this.isSearch = false;\n      this.searchLoading = false;\n      if (res.header && res.header.success) {\n        if (res.taskDTOList.length > 0) {\n          this.hasPagination = true;\n          res.totalRecords = res.count;\n          if (this.searchFormTaskType.length < 2) {\n            await this.queryDictDataList();\n            this.resConverseList(res.taskDTOList, res);\n            return res;\n          } else {\n            this.resConverseList(res.taskDTOList, res);\n            return res;\n          }\n        } else {\n          return {\n            header: res.header,\n            list: [],\n          };\n        }\n      } else {\n        this.isSearch = false;\n      }\n    },\n    getHandlerData() {\n      return new Promise((resolve) => {\n        let params = {\n          operatorType: 20,\n          status: '03',\n          userName: this.selectOperatorSearchFormData.userName,\n          firstName: this.selectOperatorSearchFormData.firstName,\n          middleName: this.selectOperatorSearchFormData.middleName,\n          lastName: this.selectOperatorSearchFormData.lastName,\n          pageNo: this.selectOperatorDialogTable.paginationConfig.pageIndex,\n          pageSize: this.selectOperatorDialogTable.paginationConfig.pageSize,\n        };\n        queryCurrentHandler(params).then((res) => {\n          this.selectOperatorDialogTable.isSearch = false;\n          res.list = res.list.map((item) => {\n            item.id = item.identityId;\n            return item;\n          });\n          if (res.header && res.header.success) {\n            res.totalRecords = res.total;\n            return resolve(res);\n          } else {\n            this.selectOperatorDialogTable.isSearch = false;\n          }\n        });\n      });\n    },\n    async getOrgHandlerData() {\n      let params = {\n        shortCode: this.selectOperatorSearchFormData.shortCode,\n        operatorName: this.selectOperatorSearchFormData.userName,\n        selectType: 'operator',\n        status: '03',\n        operatorType: 30,\n        pageSize: this.selectOperatorDialogTable.paginationConfig.pageSize,\n        pageNo: this.selectOperatorDialogTable.paginationConfig.pageIndex,\n      };\n      let res = await queryOrgCurrentHandler(params);\n      this.selectOperatorDialogTable.isSearch = false;\n      if (res.header && res.header.success) {\n        let list = res.list.map((item) => {\n          item.id = item.operatorId;\n          // item.userName = item.operatorName;\n          return item;\n        });\n        return {\n          header: res.header,\n          list,\n          totalRecords: res.totalSize,\n        };\n      } else {\n        this.selectOperatorDialogTable.isSearch = false;\n      }\n    },\n    comfirmTaskNameHandler() {\n      this.formData.taskName = this.tempTaskName.taskName;\n      if (this.tempTaskName.taskType === 'TRANSATION_AND_ACTION') {\n        this.formData.taskType = 'Transaction and Action';\n        this.curSelectTaskNameToTaskType = 'Transaction and Action';\n      } else {\n        if (this.tempTaskName.taskType) {\n          let taskType = this.tempTaskName.taskType\n            .toLocaleLowerCase()\n            .split('_')\n            .map((item) => {\n              return item.replace(item[0], item[0].toLocaleUpperCase());\n            });\n          this.formData.taskType = taskType.join(' ');\n          this.curSelectTaskNameToTaskType = taskType.join(' ');\n        }\n      }\n      this.taskNameDialogVisible = false;\n    },\n    selectTaskName(val) {\n      this.tempTaskName = val;\n    },\n    async getTaskNameDialogData() {\n      let taskTypeCondition = '';\n      let taskTypeCodetoLabel = '';\n      this.searchFormTaskType.some((item) => {\n        if (item.value === this.taskNameSearchFormData.taskType) {\n          taskTypeCodetoLabel = item.label;\n          return true;\n        }\n      });\n      if (taskTypeCodetoLabel) {\n        if (taskTypeCodetoLabel !== 'All') {\n          if (taskTypeCodetoLabel === 'Transaction and Action') {\n            taskTypeCondition = 'TRANSATION_AND_ACTION';\n          } else {\n            taskTypeCondition = taskTypeCodetoLabel.toUpperCase().split(' ').join('_');\n          }\n        }\n      }\n      let params = {\n        taskNameCondition: this.taskNameSearchFormData.taskName,\n        taskTypeCondition,\n        pageNo: this.dialogTable.paginationConfig.pageIndex,\n        pageSize: this.dialogTable.paginationConfig.pageSize,\n      };\n      let res = await queryTaskName(params);\n      this.taskNameSearchLoading = false;\n      this.dialogTable.isSearch = false;\n      if (res.taskTypeList && res.taskTypeList.length > 0) {\n        this.taskNameCount = res.taskTypeList.length;\n        this.taskNameHasData = false;\n        let list = res.taskTypeList\n          .map((item) => {\n            item.taskType = item.category;\n            return item;\n          })\n          .slice(\n            (this.dialogTable.paginationConfig.pageIndex - 1) * this.dialogTable.paginationConfig.pageSize,\n            this.dialogTable.paginationConfig.pageIndex * this.dialogTable.paginationConfig.pageSize\n          );\n        return {\n          header: { success: true },\n          list: list,\n          totalRecords: res.taskTypeList.length,\n        };\n      }\n    },\n    selectOperator(val) {\n      this.tempCurrentHandler = val.userName;\n      this.selectOperatorId = val.identityId;\n    },\n    handleDetail(val) {\n      this.openNewWindow({ path: 'detail', query: val });\n    },\n    closeDialog() {\n      this.taskNameDialogVisible = false;\n    },\n    selectTaskDialogReset() {\n      this.$refs.selectTaskNameDialogRef.$refs.dialogSearchForm.resetFields();\n      this.dialogTable.isSearch = true;\n    },\n    selectOperatorCloseDialog() {\n      this.selectOperatorDialogVisible = false;\n      this.tempCurrentHandler = '';\n      this.selectOperatorId = '';\n      this.selectOperatorDialogReset();\n    },\n    selectOperatorDialogReset() {\n      this.$refs.selectOperatorDialogRef.$refs.dialogSearchForm.resetFields();\n      Object.keys(this.$refs.selectOperatorDialogRef.$refs.dialogSearchForm.formData).forEach((key) => {\n        this.$refs.selectOperatorDialogRef.$refs.dialogSearchForm.formData[key] = '';\n      });\n      this.newSearchType = false;\n      this.selectOperatorSearchForm.formData.operatorType = 'spOperator';\n      this.$nextTick(() => {\n        this.selectOperatorDialogTable.isSearch = true;\n      });\n    },\n    comfirmselectOperator() {\n      this.formData.currentHandler = this.tempCurrentHandler;\n      this.selectOperatorDialogVisible = false;\n    },\n    handleCommand(val) {\n      this.sortTime = val;\n      this.isSearch = true;\n    },\n    assignEvent() {\n      this.assignTaskDialogVisible = true;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.task-history-container {\n  overflow: hidden;\n  .page-header {\n    padding: 20px;\n    background-color: $base-menu-background;\n    .title {\n      height: 32px;\n      font-weight: 700;\n      color: $--text_color--emphasis;\n      font-size: 24px;\n      margin-bottom: 8px;\n    }\n    .desc {\n      width: 1092px;\n      height: 16px;\n      color: $--text_color--secondary;\n      font-size: 12px;\n    }\n  }\n  .page-content {\n    margin-top: 1px;\n    /deep/ .org-short-code {\n      position: relative;\n    }\n    .table-container {\n      background-color: $base-menu-background;\n      padding: 20px 20px;\n    }\n  }\n  .check-operator {\n    margin-top: 20px;\n    margin-left: 20px;\n    .check-label::before {\n      content: '*';\n      position: absolute;\n      left: -12px;\n      top: 1px;\n      font-size: 20px;\n      color: $--status_color--error;\n    }\n    .check-label {\n      margin-bottom: 8px;\n      margin-left: 12px;\n      position: relative;\n      font-family: Huawei Sans;\n      color: $--text_color--secondary;\n      font-size: 14px;\n    }\n    .el-radio {\n      margin-right: 20px;\n    }\n    /deep/ .el-radio__label {\n      color: $--text_color--strong;\n      font-size: 14px;\n      padding-left: 9px;\n    }\n  }\n  .table-operate-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 20px;\n    .el-dropdown-link {\n      .svg-icon {\n        margin-left: 8px;\n      }\n    }\n    .assign-btn {\n      margin-bottom: 16px;\n    }\n  }\n  .page-dialog {\n    /deep/ .pagination-region {\n      .el-select--mini {\n        display: none;\n      }\n      .pagination__total {\n        margin-right: 18px;\n      }\n      .go-to-buttom {\n        display: none;\n      }\n      .show-title {\n        display: none;\n      }\n      .go-to-buttom {\n        display: none;\n      }\n      .el-pagination__jump {\n        display: none;\n      }\n    }\n    /deep/ .select-task-name {\n      .el-divider--horizontal {\n        display: none;\n      }\n    }\n    /deep/ .select-operator-dialog {\n      .el-divider--horizontal {\n        display: none;\n      }\n    }\n  }\n  /deep/ .due-time {\n    .el-input__inner {\n      padding-left: 12px;\n    }\n  }\n}\n</style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=4d83f279&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=4d83f279&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4d83f279\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}